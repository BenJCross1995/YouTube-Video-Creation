---
title: "Little Simz Lyrics Analysis"
date: "`r Sys.time()`"
date-format: medium
author: "Ben Cross"
categories: [news, code, analysis, NLP]
image: "image.jpg"
abstract: "Album and lyric analysis of British rapper, Little Simz."
---

```{r SetOptions}
#| echo: false
knitr::opts_chunk$set(message=FALSE, fig.width = 10, echo = FALSE)
```

```{r LoadLibraries}

suppressWarnings(
  suppressPackageStartupMessages({
    library(RColorBrewer) # Colour palettes
    library(gridExtra)    # Facet Wrap
    library(kableExtra)   # More Tables
    library(ggplot2)
    library(tidyr)        # Seperate columns
    library(stringr)
    library(rvest)        # Album Awards
    library(dplyr)
    library(lubridate)
    library(tidytext)     # unnest_tokens
    library(stopwords)    # Get stopwords
  })
)

options(dplyr.summarise.inform = FALSE)

```

```{r BaseFigureTheme}
# Code to change the default theme for all plots to keep mostly consistent
base.theme <- theme(
    axis.title.x = element_blank(),
    axis.title.y = element_blank(),
    legend.position = "top",
    legend.background = element_rect(fill = "transparent", colour = NA_character_),
    legend.box.background = element_rect(fill = "transparent", colour = NA_character_),
    legend.key = element_rect(fill = "transparent"),
    legend.text = element_text(colour = "white"),
    legend.title = element_text(colour = "white"),
    plot.title = element_text(hjust = 0.5, color = "white", size = 16),
    plot.background = element_rect(fill = "transparent", colour = NA_character_),
    panel.grid = element_blank(),
    panel.background = element_rect(fill = "transparent", colour = NA_character_))
```

```{r FileLocations}

setwd("C:/Users/benjc/Documents/Quarto/R - Projects/R Projects/posts/Little Simz Lyrics Analysis/")
# Below we have the locations for the lyrics, albums and songs

```

```{r LoadLyricsFunction}

read.lyric.files <- function(lyric.loc, album){
  #' A function which takes in a filepath and an album folder which stores
  #' the lyric .txt files as functions and returns a dataframe containing
  #' the album name, song title, and a lyric column with one row of lyrics
  #' per row in the .txt file.
  #' 
  #' @param lyric.loc - The filepath to the main lyrics folder
  #' @param album - The name of the album.
  #' 
  #' @return - A dataframe containing the album, song, and lyrics.
  #' 

  # Create a blank dataframe
  lyrics.df <- data.frame()
  
  # Create a string containing the lyric location and album name
  loc <- paste0(lyric.loc, album, "/")
  
  # Search this filepath for the songs in the album
  songs <- list.files(loc)
  
  # Now we read in the files
  for(song in songs){
    # When reading the data below, we want no header so that the first line
    # isn't used as a column header, create own column name, choose the 
    # encoding as UTF-8 to change characters to English then there are some
    # quotes in the lyrics so set quotation marks to "".
    lyrics <- read.delim(paste0(loc, song),
                         header = FALSE,
                         col.names = "Lyrics",
                         encoding = 'UTF-8',
                         quote = "")
    # Bind the album and song data together.
    lyrics <- cbind("Album" = album,
                    "Song" = song,
                    "Lyrics" = lyrics)
    
    # Now remove the .txt from the song title and filter out 
    # full unknown rows.
    lyrics <- as.data.frame(lyrics) %>%
      mutate(Song = strsplit(Song,
                             split = '.txt',
                             fixed = TRUE)) %>%
      filter(!(Lyrics == "[?]"))
    
    # Bind the new rows to the old dataframe.
    lyrics.df <- rbind(lyrics.df, lyrics)
  }
  # Return the new dataframe
  return(lyrics.df)
}

```

```{r LoadSupportingData}

# Load the album information
album.info <- read.csv("./Info/Album Info.csv")
album.info$AlbumReleaseDate <- as.Date(album.info$AlbumReleaseDate, "%d/%m/%Y")

# Load the song information
song.info <- read.csv("./Info/Song Info.csv")
song.info$SongReleaseDate <- as.Date(song.info$SongReleaseDate, "%Y-%m-%d")

# Combine the song and album information
song.info <- song.info %>%
  left_join(album.info, by = 'AlbumID')
```

```{r LoadLyrics}

# Get a list of albums from the lyrics folder
albums <- list.files("./Lyrics/")

# Create an empty dataframe
lyrics <- data.frame()

# Loop across all albums in the folder and cmplete the
# read.lyric.files function for each album. Bind the results
# of each album to the dataframe.
for(album in albums){
  lyric <- read.lyric.files("./Lyrics/", album)
  lyrics <- rbind(lyrics, lyric)
}

```

# Little Simz Lyrics Analysis

Simbiatu Abisola Abiola Ajikawo, also known as Little Simz, is a British rapper, singer and actress. Her fame sky-rocketed after her 2021 album *Sometimes I Might Be Introvert* won huge acclaim, earning her a headline slot on the West Holts Stage at Glastonbury festival 2022 as well as the 2022 Mercury Prize for album of the year. She also went on a sell out tour for this album, playing in 13 cities across the UK - I was lucky enough to see her in both Manchester and Liverpool which were incredible experiences - as well as many festivals across the globe. On the 12th December 2022 she released her 5th studio album, entitled *NO THANK YOU*. The purpose of this project is to analyse her 5 studio albums, and in particular, their lyrics.

## Awards

```{r AwardsData}
#| cache: true

# Cache the result in case the table changes.
# Wiki page
wiki.page <- "https://en.wikipedia.org/wiki/Little_Simz#Awards_and_nominations"

# Read in the table, you get the xpath by right clicking element in inspection and
# clicking copy XPath
awards <- wiki.page %>%
  read_html() %>%
  html_node(xpath = "//*[@id='mw-content-text']/div[1]/table[11]") %>%
  html_table(fill = T)

```

A measure of an artist's success can be drawn from the amount of award nominations and wins an album has. @fig-Awards shows award nominations for each album, broken down by the result. This data was scraped from [Wikipedia](https://en.wikipedia.org/wiki/Little_Simz#Awards_and_nominations). The albums on the x-axis are shown in order of release, here we can see she had a massive jump in nominations between her second and third album. With an additional nomination for *Sometimes It Might Be Introvert* (SIMBI). Due to its recent release, there are no possible awards for *NO THANK YOU*.

```{r AwardsGraph, dev = "png", dev.args = list(bg = "transparent")}
#| label: fig-Awards
#| fig-cap: "Bar chart displaying the award nominations for each album broken down by the result"

awards <- awards %>%
  filter(`Nominated work` %in% albums) %>%
  select(- Ref.) %>%
  rename("Album" = "Nominated work") %>%
  mutate(Album = factor(Album,
                           levels = c("A Curious Tale Of Trials + Persons",
                                      "Stillness in Wonderland",
                                      "Grey Area",
                                      "Sometimes I Might Be Introvert",
                                      "No Thank You")))



awards %>%
  ggplot(aes(x = Album, fill = Result)) +
  geom_bar() +
  ggtitle(str_to_title("Awards by Album and Result")) +
  labs(y = "Total Awards") +
  base.theme +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 0.5,
                               vjust = 0.5, colour = "white"),
    axis.text.y = element_text(colour = "white")
  ) +
  scale_fill_brewer(palette = "Dark2")
```

@tbl-AwardWins shows the breakdown of the awards won for each of Little Simz's albums culminating in the coveted Mercury Prize win in 2022. It is quite surprising that she has not won multiple awards within both the same award ceremony and from the same awarding body.

```{r ShowAwardsData}
#| label: tbl-AwardWins
#| tbl-cap: "Table showing the awards won by Little Simz for each of her albums."


#' Collapse the values within a grouped dataframe
#' 
#' 
collapse_rows_df <- function(df, variable){
  group_var <- enquo(variable)
  df %>%
    group_by(!! group_var) %>%
    mutate(groupRow = 1:n()) %>%
    ungroup() %>%
    mutate(!!quo_name(group_var) := ifelse(groupRow == 1, as.character(!! group_var), "")) %>%
    select(-c(groupRow))
}

kable(awards %>% filter(Result == "Won") %>% select(-Result) %>% relocate(Album),
      align = rep('l', 4), format = "html", escape = F) %>%
  kable_material(full_width = F) %>%
  column_spec( 1:4, border_left = T, border_right = T) %>%
  column_spec( 1, bold = T, width = "30em") %>%
  column_spec( 2, width = "10em") %>%
  kable_styling(font_size = 12) %>%
  row_spec( 0, font_size = 16, bold = T,
            background = "lightgrey", color = "black",
            align = "center") %>%
  collapse_rows(columns = 'Album')
  
```

## Lyric Analysis

In this section of the report I will be analysing

```{r ManipulateLyrics}

lyrics <- lyrics %>%
  mutate(Info = ifelse(substr(Lyrics, 1, 1) == "[" &
                         substr(Lyrics, 1, 2) != "[?"  ,
                       substring(Lyrics, 2, nchar(Lyrics) - 1),
                       NA),
         SongPart = ifelse(str_detect(Info, ":") == TRUE,
                           sub("\\:.*","",Info),
                           Info),
         Artist = ifelse(str_detect(Info, ":") == TRUE,
                         sub(".*\\:","",Info),
                         ifelse(
                           str_detect(Info, ":") == FALSE &
                             !(is.na(Info)),
                           "Little Simz",
                           NA)),
         Album = factor(Album,
                        levels = c("A Curious Tale Of Trials + Persons",
                                   "Stillness in Wonderland",
                                   "Grey Area",
                                   "Sometimes I Might Be Introvert",
                                   "No Thank You"))) %>%
  fill(SongPart, Artist) %>%
  filter(substr(Lyrics, 1, 1) != "[" &
             substr(Lyrics, 1, 2) != "[?") %>%
  select(-Info)
```

```{r WordsPerSecondData}

words.per.second <- lyrics %>%
  unnest_tokens(word, Lyrics) %>%
  group_by(Album, Song) %>%
  summarise("Words" = n()) %>%
  unnest(Song) %>%
  left_join(song.info[,c('AlbumTitle', 'Song', 'SongLength')],
            by = c('Album' = 'AlbumTitle', 'Song')) %>%
  mutate(WordsPerSecond = Words / SongLength,
         Album = factor(Album,
                        levels = c("A Curious Tale Of Trials + Persons",
                                   "Stillness in Wonderland",
                                   "Grey Area",
                                   "Sometimes I Might Be Introvert",
                                   "No Thank You"))) %>%
  arrange(desc(WordsPerSecond))
```

```{r WordsPerSong, dev = "png", dev.args = list(bg = "transparent")}
#| fig-height: 12
#| label: fig-WordsPerSong
#| fig-cap: "Bar charts showing the words per song, broken down by album."


words.per.second %>%
  ggplot(aes(x = Words, y = reorder(Song, Words),
             fill = Album)) +
  geom_col() +
  facet_wrap(Album~., dir = "h", scales = "free", ncol = 2) +
  ggtitle(str_to_title("Number of words in each song broken down by Album")) +
  base.theme +
  theme(
    legend.position = "none",
    axis.text = element_text(color = "white")
  ) +
  scale_fill_brewer(palette = "Dark2")

```

@fig-WordsPerSong

```{r WordsPerSecondGraph, dev = "png", dev.args = list(bg = "transparent")}
#| fig-height: 8
#| label: fig-WordsPerSecond
#| fig-cap: "Chart showing the top 25 songs by words per second, broken down by album."

words.per.second %>%
  head(25) %>%
  ggplot(aes(x = reorder(Song, -WordsPerSecond), y = WordsPerSecond, fill = Album)) +
  geom_bar(stat = "identity") + 
  geom_text(aes(label = round(WordsPerSecond, 2)),
            position = position_stack(vjust = 0.75),
            angle = 45, colour = "white") +
  ggtitle("Top 25 Songs by Words per Second, Coloured by Album")+
  base.theme + 
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1,
                               vjust = 0.5, color = "white", size = 10),
    axis.text.y = element_blank(),
    axis.ticks.y = element_blank()) +
  coord_polar(theta = "x") +
  scale_fill_brewer(palette = "Dark2")
  
```

@fig-WordsPerSecond

```{r}



lyrics.per.song <- lyrics %>%
  unnest_tokens(word, Lyrics) %>%
  filter(!(word %in% stopwords(source = "snowball"))) %>%
  filter(Artist =="Little Simz") %>%
  count(Album, word) %>%
  group_by(Album) %>%
  arrange(desc(n)) %>%
  as.data.frame()

```
